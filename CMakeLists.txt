CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

PROJECT(Ansmine)

SET(VERSION_MAJOR		0)
SET(VERSION_MINOR		0)
SET(VERSION_REVISION 	1)

CONFIGURE_FILE(src/config.hpp.in src/config.hpp)

FIND_PACKAGE(Qt4 COMPONENTS QtCore QtGui QtNetwork REQUIRED)
FIND_PACKAGE(QJson REQUIRED)

INCLUDE(${QT_USE_FILE})

MESSAGE(STATUS "qjson inc: ${QJSON_INCLUDE_DIR}")
MESSAGE(STATUS "qjson lib: ${QJSON_LIBRARY}")
MESSAGE(STATUS "qjson libs: ${QJSON_LIBRARIES}")
MESSAGE(STATUS "qt libs:" ${QT_LIBRARIES})

SET( ANSMINE_SOURCES
	src/ansmine.hpp
	src/ansmine.cpp
	)
	
SET( ANSMINED_SOURCES
	src/tray.hpp
	src/tray.cpp
	)

INCLUDE_DIRECTORIES(
	src
	${QJSON_INCLUDE_DIR}
	${CMAKE_CURRENT_SOURCE_DIR}
	)

QT4_WRAP_UI(ANSMINE_UI_HEADERS 
	ui/login.ui
	ui/main.ui
	)
QT4_WRAP_CPP(ANSMINE_MOC 
	src/ansmine.hpp
	)
QT4_WRAP_CPP(ANSMINED_MOC 
	src/tray.hpp
	)

IF( APPLE )
	SET(PROGNAME Ansmine)
	ADD_EXECUTABLE(${PROGNAME} MACOSX_BUNDLE src/ansmine_main.cpp ${ANSMINE_SOURCES} ${ANSMINE_UI_HEADERS} ${ANSMINE_MOC})
ELSE( APPLE )
	SET(PROGNAME ansmine)
	ADD_EXECUTABLE(${PROGNAME} ${SOURCES} ${ANSMINE_UI_HEADERS} ${ANSMINE_MOC})
ENDIF( APPLE )

TARGET_LINK_LIBRARIES(${PROGNAME} 
	${QT_LIBRARIES}
	${QJSON_LIBRARY}
	)

# For Ansmine Daemon

ADD_EXECUTABLE(${PROGNAME}d src/ansmined_main.cpp ${ANSMINED_SOURCES} ${ANSMINED_MOC})

TARGET_LINK_LIBRARIES(${PROGNAME}d
	${QT_LIBRARIES}
	${QJSON_LIBRARY}
	)

